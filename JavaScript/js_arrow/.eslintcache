[{"/Users/superstar_pkb/proj/javascript/js_arrow/src/index.js":"1","/Users/superstar_pkb/proj/javascript/js_arrow/src/App.js":"2","/Users/superstar_pkb/proj/javascript/js_arrow/src/reportWebVitals.js":"3","/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest.js":"4","/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest2.js":"5","/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest3.js":"6","/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest4.js":"7","/Users/superstar_pkb/proj/javascript/js_arrow/src/func-test/FuncTest.js":"8","/Users/superstar_pkb/proj/javascript/js_arrow/src/func-test/DefaultParam.js":"9","/Users/superstar_pkb/proj/javascript/js_arrow/src/Exercise/Exercise1.js":"10","/Users/superstar_pkb/proj/javascript/js_arrow/src/Exercise/Prob.js":"11"},{"size":1105,"mtime":1612318059676,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":1612247410944,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612247410947,"results":"15","hashOfConfig":"13"},{"size":390,"mtime":1612247664038,"results":"16","hashOfConfig":"13"},{"size":435,"mtime":1612247789837,"results":"17","hashOfConfig":"13"},{"size":454,"mtime":1612247921855,"results":"18","hashOfConfig":"13"},{"size":734,"mtime":1612248429389,"results":"19","hashOfConfig":"13"},{"size":528,"mtime":1612248662593,"results":"20","hashOfConfig":"13"},{"size":421,"mtime":1612250878187,"results":"21","hashOfConfig":"13"},{"size":8605,"mtime":1612313136697,"results":"22","hashOfConfig":"13"},{"size":6903,"mtime":1612323145537,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1hmudyq",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/superstar_pkb/proj/javascript/js_arrow/src/index.js",["49"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ArrowFunctionTest from './arrow-test/ArrowFunctionTest';\nimport ArrowFunctionTest2 from './arrow-test/ArrowFunctionTest2';\nimport ArrowFunctionTest3 from './arrow-test/ArrowFunctionTest3';\nimport ArrowFunctionTest4 from './arrow-test/ArrowFunctionTest4';\nimport FuncTest from './func-test/FuncTest';\nimport DefaultParam from './func-test/DefaultParam';\nimport Exercise1 from './Exercise/Exercise1';\nimport Prob from './Exercise/Prob';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ArrowFunctionTest />\n    <ArrowFunctionTest2 />\n    <ArrowFunctionTest3 />\n    <ArrowFunctionTest4 />\n    <FuncTest />\n    <DefaultParam />\n    <Exercise1 />\n    <Prob/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["50","51"],"/Users/superstar_pkb/proj/javascript/js_arrow/src/App.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/reportWebVitals.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest2.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest3.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/arrow-test/ArrowFunctionTest4.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/func-test/FuncTest.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/func-test/DefaultParam.js",[],"/Users/superstar_pkb/proj/javascript/js_arrow/src/Exercise/Exercise1.js",["52","53","54","55","56","57"],"// 연습 문제 : 팀 로또 ?!\n// 참가자는 총 1000명이다.\n// 참가자는 이 로또 배틀에 참여하기 위해 각자 1000만 원을 지불한다.\n// 참가자들은 1 ~ 10000 사이의 숫자를 할당 받는다.\n// 팀원은 랜덤하게 4명씩 짝을 짓는다. (총 250개의 팀)\n// 로또 당첨은 1013의 배수를 뽑은 사람이 이긴 것으로 간주한다.\n\n// 배당금은 아래 원칙에 따라 지급한다.\n// 모든 팀원이 로또에 당첨된 경우 : 승리 수당 배수가 2^4으로 16배 뛴다.\n// 팀원 중 3명이 당첨된 경우 : 승리 수당 배수가 2^3으로 8배 뛴다.\n// 팀원 중 2명이 당첨된 경우 : 승리 수당 배수가 2^2으로 4배 뛴다.\n// 팀원 중 1명이 당첨된 경우 : 원래 수당 그대로 받는다.\n\n// 1) 16 : 16 : 8 : 8 : 4 : 1 : 1 : 1 : 1 : 1 : 1 : 1 : 1 : 1\n// 2) 16\n// 3) 8\n// 4) 4\n// 5) 1\n\n// 주최 측은 무조건적으로 전체 비용의 33%를 가져간다.\n// 승리 팀의 상태를 출력하고 승리 수당을 분배하여 표시하도록 한다.\n\n// 랜덤으로 해서 팀 설정\n// 1013의 배수 찾기 -> 각 팀별 몇 명인지 구하기\n// 승리 수당 배수 합칠 때 reduce 사용\nconst AllocRandomNumber = (arr) => {\n    console.log(\"AllocRandomNumber Called\")\n    for (var i = 0; i < arr.length; i++) {\n        arr[i] = Math.floor(Math.random() * 10000) + 1\n    }\n}\n\nconst CreateRandomTeam = (arr, randArr) => {\n    let indexArr = []\n    let index\n\n    for (var i = 0; i < arr.length;) {\n        index = Math.floor(Math.random() * arr.length)\n\n        if (!indexArr.includes(index)) {\n            indexArr.push(index)\n\n            randArr[i] = arr[index]\n            i++\n        }\n    }\n\n    return indexArr\n}\n\nconst CheckWinner = (randArr, teamArr, winningnumber) => {\n    let arrNum = 0\n    let personperteam = 4\n    let team = []\n\n    //for (var i = 0; i < randArr.length; i++) {\n    team[0] = randArr.slice(0, 4)\n    team[1] = randArr.slice(4, 8)\n    team = team.join(\"/\")\n    //}\n    console.log(\"team : \" + team)\n\n    for (var i = 0; i < randArr.length; i++) {\n        if (i % 4 === 0 && i !== 0) {\n            arrNum++\n        }\n\n        if (randArr[i] % winningnumber === 0) {\n            teamArr[arrNum]++\n        }\n    }\n\n    for (var i = 0; i < teamArr.length; i++) {\n        if (teamArr[i] > 0) {\n            console.log(`${i + 1}팀 : ${teamArr[i]}명 당첨`)\n        }\n    }\n}\n\n// 배당금은 아래 원칙에 따라 지급한다.\n// 모든 팀원이 로또에 당첨된 경우 : 승리 수당 배수가 2^4으로 16배 뛴다.\n// 팀원 중 3명이 당첨된 경우 : 승리 수당 배수가 2^3으로 8배 뛴다.\n// 팀원 중 2명이 당첨된 경우 : 승리 수당 배수가 2^2으로 4배 뛴다.\n// 팀원 중 1명이 당첨된 경우 : 원래 수당 그대로 받는다.\n\n// 1) 16 : 16 : 8 : 8 : 4 : 1 : 1 : 1 : 1 : 1 : 1 : 1 : 1 : 1\n// 2) 16\n// 3) 8\n// 4) 4\n// 5) 1\n\n// 주최 측은 무조건적으로 전체 비용의 33%를 가져간다.\n// 승리 팀의 상태를 출력하고 승리 수당을 분배하여 표시하도록 한다.\nconst CalcDividend = (teamArr, indexArr, price) => {\n    let numOfWinner = teamArr.reduce((total, value) => total + value)\n    let dividend = parseInt(price / numOfWinner)\n    let winnerPrice\n\n    let announcement = () => {\n        return console.log((i + 1) + \"팀 \" + indexArr[i] + \"번 참가자 : \" + winnerPrice + \"원 당첨 !\")\n    }\n\n    console.log(\"총 당첨자 수 : \" + numOfWinner + \"명\")\n\n    if (numOfWinner === 0) {\n        console.log(\"당첨자가 없습니다.\")\n    } else {\n        console.log(`승리 수당 : ${dividend}원`)\n        for (var i = 0; i < teamArr.length; i++) {\n            if (teamArr[i] === 4) {\n                winnerPrice = dividend * Math.pow(2, 4)\n                announcement()\n            } else if (teamArr[i] === 3) {\n                winnerPrice = dividend * Math.pow(2, 3)\n                announcement(i, winnerPrice)\n            } else if (teamArr[i] === 2) {\n                winnerPrice = dividend * Math.pow(2, 2)\n                announcement(i, winnerPrice)\n            } else if (teamArr[i] === 1) {\n                winnerPrice = dividend\n                announcement()\n            }\n        }\n    }\n}\n\nconst Exercise1 = () => {\n    const NUMOFPERSON = 12\n    const FEE = 10000000\n    const PARTICIPANTSTAKE = 0.67\n    const PRICE = NUMOFPERSON * FEE * PARTICIPANTSTAKE\n    const PERSONPERTEAM = 4\n    const NUMOFTEAM = NUMOFPERSON / PERSONPERTEAM\n    const WINNINGNUMBER = 10\n\n    const RANGE = 10000\n    const ZERO = 0\n    const ONE = 1\n\n    let participant = []\n    let participantIndex = []\n    let team = []\n    let winnerIndex = []\n    let winnerNumOfTeam = []\n    let winnerNumOfTeamIndex = []\n\n    console.log(\"상금 = \" + PRICE)\n\n    function AllocRandomNumber() {\n        for (var i = ZERO; i < NUMOFPERSON; i++) {\n            participant[i] = Math.floor(Math.random() * RANGE) + ONE\n            participantIndex[i] = i + 1\n        }\n    }\n\n    function CreateRandomTeam() {\n        function sortFunc(arr, index) {\n            for (var i = arr.length - 1; i > 0; i--) {\n                var j = Math.floor(Math.random() * (i + 1))\n\n                var temp = arr[i]\n                arr[i] = arr[j]\n                arr[j] = temp\n\n                var temp2 = index[i]\n                index[i] = index[j]\n                index[j] = temp2\n            }\n        }\n\n        sortFunc(participant, participantIndex)\n\n        for (var i = ZERO; i < NUMOFTEAM; i++) {\n            team[i] = participant.slice(PERSONPERTEAM * i, PERSONPERTEAM * (i + 1))\n        }\n\n        console.log(team)\n        console.log(participantIndex)\n    }\n\n    function CheckWinner() {\n        let cnt = ZERO\n        let indexCnt = ZERO\n\n        for (var i = ZERO; i < NUMOFTEAM; i++) {\n            for (var j of team[i]) {\n                if (j % WINNINGNUMBER === ZERO) {\n                    winnerIndex.push(PERSONPERTEAM * i + indexCnt)\n                    cnt++\n                }\n                indexCnt++\n            }\n\n            if (cnt) {\n                winnerNumOfTeamIndex.push(i + 1)\n            }\n\n            winnerNumOfTeam[i] = cnt\n            cnt = ZERO\n            indexCnt = ZERO\n        }\n    }\n\n    function CalcDividend() {\n        let winnerTeam = winnerNumOfTeam.filter(function (num) {\n            return num > ZERO\n        })\n        console.log(\"팀 당 당첨자 수 (최소 한 명) : \" + winnerTeam)\n\n        let numOfWinner = winnerTeam.reduce((total, value) => total + value, ZERO)\n        console.log(\"총 당첨자 수 : \" + numOfWinner)\n\n        let mul = winnerTeam.map(cnt => {\n            if (cnt === 1) {\n                return 1\n            } else {\n                return Math.pow(2, cnt)\n            }\n        })\n\n        if (numOfWinner === ZERO) {\n            console.log(\"당첨자가 없습니다.\")\n        } else {\n            let devidend = PRICE / numOfWinner\n            console.log(\"승리 수당 : \" + devidend)\n\n            // 끝까지 안 돎 (winnerTeam 크기만큼만 돌아서)\n            for (var i = ZERO; i < winnerTeam.length; i++) {\n                let winnerPrice = devidend * mul[i]\n\n                for (var j = ZERO; j < PERSONPERTEAM; j++) {\n                    console.log(i * PERSONPERTEAM + j)\n\n                    if (winnerIndex.includes(i * PERSONPERTEAM + j)) {\n                        console.log(participantIndex[i * PERSONPERTEAM + j] + \"번 참가자 (\" +\n                            winnerNumOfTeamIndex[i] + \"팀) : \" + winnerPrice + \"원 당첨 !\")\n                    }\n                }\n            }\n        }\n    }\n\n    AllocRandomNumber()\n    console.log(\"섞기 전 참가자 할당 숫자 : \" + participant)\n\n    CreateRandomTeam()\n    console.log(\"섞은 후 참가자 할당 숫자 : \" + team)\n\n    CheckWinner()\n    console.log(\"팀 당 당첨자 수 : \" + winnerNumOfTeam)\n    console.log(\"당첨자 포함된 팀 번호 : \" + winnerNumOfTeamIndex)\n    console.log(\"당첨자 인덱스 : \" + winnerIndex)\n\n    CalcDividend()\n\n    /*\n    let arr = new Array(NUMOFPERSON)\n    let randArr = new Array(NUMOFPERSON)\n    let teamArr = new Array(NUMOFTEAM).fill(0)\n\n    AllocRandomNumber(arr)\n    console.log(\"res = \" + arr)\n\n    let indexArr = CreateRandomTeam(arr, randArr)\n    console.log(\"rand res = \" + randArr)\n    console.log(indexArr)\n\n    CheckWinner(randArr, teamArr, WINNINGNUMBER)\n    console.log(teamArr)\n\n    CalcDividend(teamArr, indexArr, PRICE)\n    */\n\n    return (\n        <div className=\"Exercise1\">\n            <p>Exercise1</p>\n        </div>\n    )\n}\n\nexport default Exercise1","/Users/superstar_pkb/proj/javascript/js_arrow/src/Exercise/Prob.js",["58","59","60","61"],{"ruleId":"62","severity":1,"message":"63","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":11},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":26,"column":7,"nodeType":"64","messageId":"65","endLine":26,"endColumn":24},{"ruleId":"62","severity":1,"message":"71","line":33,"column":7,"nodeType":"64","messageId":"65","endLine":33,"endColumn":23},{"ruleId":"62","severity":1,"message":"72","line":51,"column":7,"nodeType":"64","messageId":"65","endLine":51,"endColumn":18},{"ruleId":"62","severity":1,"message":"73","line":53,"column":9,"nodeType":"64","messageId":"65","endLine":53,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":73,"column":14,"nodeType":"64","messageId":"76","endLine":73,"endColumn":15},{"ruleId":"62","severity":1,"message":"77","line":94,"column":7,"nodeType":"64","messageId":"65","endLine":94,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":49,"column":34,"nodeType":"80","messageId":"81","endLine":49,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":85,"column":1,"nodeType":"84","messageId":"81","endLine":99,"endColumn":2},{"ruleId":"82","severity":1,"message":"83","line":101,"column":1,"nodeType":"84","messageId":"81","endLine":108,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":151,"column":19,"nodeType":"80","messageId":"81","endLine":151,"endColumn":21},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'AllocRandomNumber' is assigned a value but never used.","'CreateRandomTeam' is assigned a value but never used.","'CheckWinner' is assigned a value but never used.","'personperteam' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'CalcDividend' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation"]